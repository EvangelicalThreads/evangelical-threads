generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email         String    @unique
  name          String?
  password      String
  emailOptIn    Boolean   @default(false)
  createdAt     DateTime  @default(now())
  emailVerified DateTime?
  updatedAt     DateTime  @default(now()) @updatedAt
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  @@map("users")
}

model password_reset_tokens {
  id         Int      @id @default(autoincrement())
  email      String
  token      String
  used       Boolean? @default(false)
  expires_at DateTime @db.Timestamp(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model reflection_likes {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  reflection_id String?      @db.Uuid
  user_id       String       @db.Uuid
  created_at    DateTime?    @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  reflections   reflections? @relation(fields: [reflection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([reflection_id, user_id])
  @@unique([user_id, reflection_id], map: "unique_user_reflection_like")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model reflections {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shirt_code       String
  text             String
  is_approved      Boolean?           @default(false)
  created_at       DateTime?          @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  reflection_likes reflection_likes[]
}

model orders {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stripe_session_id  String
  name              String
  address           String
  city              String
  state             String
  postal_code       String
  country           String
  status            String   @default("pending")
  created_at        DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
}
